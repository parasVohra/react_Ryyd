{"version":3,"sources":["services/httpService.js","services/authService.js","common/navbar.jsx","components/notfound.jsx","common/input.jsx","common/form.jsx","components/login.jsx","services/rideService.js","components/showRides.jsx","components/dashboard.jsx","services/userService.js","components/register.jsx","components/home.jsx","components/logout.jsx","components/offerRide.jsx","components/searchRide.jsx","App.js","serviceWorker.js","index.js"],"names":["axios","interceptors","response","use","error","status","console","log","alert","Promise","reject","get","post","put","delete","setJwt","jwt","defaults","headers","common","apiEndpoint","apiUrl","email","password","a","http","data","localStorage","setItem","getJwt","getItem","login","logout","removeItem","getCurrentUser","jwtDecode","ex","loginWithJwt","NavBar","user","className","to","id","Fragment","name","NotFound","Input","label","rest","htmlFor","Form","state","errors","validate","Joi","schema","abortEarly","details","item","path","message","validateProperty","value","obj","handleSubmit","e","preventDefault","setState","doSubmit","handleChange","input","currentTarget","errorMessage","renderButton","disabled","renderInput","type","onChange","Component","Login","string","min","max","required","auth","window","location","onSubmit","this","publishRide","getRides","searchRides","ShowRides","ride","props","style","height","date","time","userName","from","fontSize","price","stops","Dashboard","rideService","rides","rideList","map","key","_id","apiEndPoint","register","Register","userService","Home","Logout","OfferRide","seats","info","number","publishData","userID","history","push","SearchRide","searchData","App","component","exact","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.6c9e4104.chunk.js","sourcesContent":["import axios from \"axios\";\n\naxios.interceptors.response.use(null, error => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    console.log(\"logging the error\", error);\n    alert(\"An unexpected error occurred\");\n  }\n  return Promise.reject(error);\n});\n\nfunction setJwt(jwt) {\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt,\n};\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\nimport jwtDecode from \"jwt-decode\";\n\nconst apiEndpoint = apiUrl + \"/auth\";\nconst tokenKey = \"token\";\n\nhttp.setJwt(getJwt());\n\nexport async function login(email, password) {\n  const { data: jwt } = await http.post(apiEndpoint, { email, password });\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport function loginWithJwt(jwt) {\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport function getJwt() {\n  return localStorage.getItem(tokenKey);\n}\n\nexport function logout() {\n  localStorage.removeItem(tokenKey);\n}\n\nexport function getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(tokenKey);\n    return jwtDecode(jwt);\n  } catch (ex) {\n    return null;\n  }\n}\n\nexport default {\n  login,\n  logout,\n  getCurrentUser,\n  loginWithJwt,\n  getJwt,\n};\n","import React from \"react\";\n\nimport { NavLink, Link } from \"react-router-dom\";\n\nconst NavBar = ({ user }) => {\n  return (\n    <nav className=\"navbar navbar-expand navbar-light bg-light\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        Ryyd\n      </Link>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n        <div className=\"navbar-nav\">\n          <NavLink className=\"nav-item nav-link\" to=\"/dashboard\">\n            Dashboard\n          </NavLink>\n          {!user && (\n            <React.Fragment>\n              <NavLink className=\"nav-item nav-link\" to=\"/login\">\n                Login\n              </NavLink>\n              <NavLink className=\"nav-item nav-link\" to=\"/register\">\n                Register\n              </NavLink>\n            </React.Fragment>\n          )}\n          {user && (\n            <React.Fragment>\n              <NavLink className=\"nav-item nav-link\" to=\"/searchRide\">\n                Search Ride\n              </NavLink>\n              <NavLink className=\"nav-item nav-link\" to=\"/offerRide\">\n                Offer Ride\n              </NavLink>\n              <NavLink className=\"nav-item nav-link\" to=\"/profile\">\n                {user.name}\n              </NavLink>\n              <NavLink className=\"nav-item nav-link\" to=\"/logout\">\n                Logout\n              </NavLink>\n            </React.Fragment>\n          )}\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return <h1>Not found</h1>;\n};\n\nexport default NotFound;\n","import React from \"react\";\n\nconst Input = ({ name, label, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input {...rest} name={name} id={name} className=\"form-control\" />\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"../common/input\";\n\nclass Form extends Component {\n  state = {\n    data: {},\n    errors: {},\n  };\n\n  validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(this.state.data, this.schema, options);\n\n    if (!error) return null;\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n  };\n\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n\n    return error ? error.details[0].message : null;\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n\n    this.doSubmit();\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data, errors });\n  };\n\n  renderButton = label => {\n    return (\n      <button disabled={this.validate()} className=\"btn btn-primary\">\n        {label}\n      </button>\n    );\n  };\n\n  renderInput = (name, label, type = \"text\") => {\n    const { data, errors } = this.state;\n    return (\n      <Input\n        type={type}\n        name={name}\n        value={data[name]}\n        onChange={this.handleChange}\n        label={label}\n        error={errors[name]}\n      />\n    );\n  };\n}\n\nexport default Form;\n","import React from \"react\";\nimport Form from \"../common/form\";\nimport Joi from \"joi-browser\";\nimport auth from \"../services/authService\";\n\nclass Login extends Form {\n  state = {\n    data: { email: \"\", password: \"\" },\n    errors: {},\n  };\n\n  schema = {\n    email: Joi.string().min(5).max(255).required().label(\"Email\"),\n    password: Joi.string().min(5).max(255).required().label(\"Password\"),\n  };\n\n  doSubmit = async () => {\n    try {\n      const { data } = this.state;\n      await auth.login(data.email, data.password);\n      window.location = \"/\";\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.email = ex.response.data;\n        this.setState({ errors });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Login</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"email\", \"Email\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderButton(\"Login\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nexport async function publishRide(data) {\n  return await http.post(apiUrl + \"/publishRide\", data);\n}\n\nexport async function getRides() {\n  return await http.get(apiUrl + \"/getRides\");\n}\n\nexport async function searchRides(data) {\n  return await http.post(apiUrl + \"/searchRide\", data);\n}\n\nexport default {\n  publishRide,\n  getRides,\n  searchRides,\n};\n","import React, { Component } from \"react\";\n\nclass ShowRides extends Component {\n  state = {};\n\n  render() {\n    const ride = this.props.ride;\n    return (\n      <div>\n        <div className=\"row justify-content-md-center my-3\">\n          <div\n            className=\"card col-md-6 col-sm-10 shadow\"\n            style={{ height: \"200px\" }}\n          >\n            <div className=\"card-title my-2 mx-3 text-primary\">\n              Departure: {ride.date} at {ride.time}\n            </div>\n            <div className=\"card-body row\">\n              <div className=\"col\">\n                <p>{ride.userName}</p>\n                <p>4 Rating</p>\n              </div>\n              <div className=\"col\">\n                <p className=\"text-secondary\">FROM</p>\n                <strong>{ride.from}</strong>\n              </div>\n              <div className=\"col\">\n                <strong style={{ fontSize: \"50px\" }}>&#8674;</strong>\n                <p></p>\n              </div>\n              <div className=\"col\">\n                <p className=\"text-secondary\">TO</p>\n                <strong>{ride.to}</strong>\n              </div>\n              <div className=\"col \">\n                <h2 className=\"text-success\">${ride.price}</h2>\n              </div>\n            </div>\n            <div className=\" text-center text-secondary\">\n              <p> Stops: {ride.stops}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default ShowRides;\n","import React, { Component } from \"react\";\nimport rideService from \"../services/rideService\";\nimport ShowRides from \"./showRides\";\n\nclass Dashboard extends Component {\n  state = {};\n  async componentDidMount() {\n    const rides = await rideService.getRides();\n    const rideList = [rides.data];\n    this.setState({ rideList });\n  }\n\n  render() {\n    const rideList = this.state.rideList;\n\n    return (\n      <div>\n        {rideList ? (\n          rideList[0].map(ride => {\n            return <ShowRides key={ride._id} ride={ride} />;\n          })\n        ) : (\n          <p>\"Loading...\"</p>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nconst apiEndPoint = apiUrl + \"/users\";\n\nexport async function register(data) {\n  return await http.post(apiEndPoint, data);\n}\n\nexport default {\n  register,\n};\n","import auth from \"../services/authService\";\nimport React from \"react\";\nimport Form from \"../common/form\";\nimport Joi from \"joi-browser\";\nimport userService from \"../services/userService\";\n\nclass Register extends Form {\n  state = {\n    data: { email: \"\", password: \"\", name: \"\" },\n    errors: {},\n  };\n\n  schema = {\n    email: Joi.string().min(5).max(255).required().label(\"Email\"),\n    password: Joi.string().min(5).max(255).required().label(\"Password\"),\n    name: Joi.string().min(3).max(40).required().label(\"Name\"),\n  };\n\n  async doSubmit() {\n    console.log(\"submitted\");\n\n    try {\n      const response = await userService.register(this.state.data);\n      console.log(response);\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\n      window.location = \"/\";\n    } catch (ex) {\n      const errors = { ...this.state.errors };\n      errors.email = ex.response.data;\n      this.setState({ errors });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Register</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"name\", \"Name\")}\n          {this.renderInput(\"email\", \"Email\", \"email\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderButton(\"Register\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","import React, { Component } from 'react';\n\nclass Home extends Component {\n    state = {  }\n    render() { \n        return (<h1>Home</h1>  );\n    }\n}\n \nexport default Home;","import React, { Component } from \"react\";\nimport auth from \"../services/authService\";\n\nclass Logout extends Component {\n  state = {};\n\n  componentDidMount() {\n    auth.logout();\n    window.location = \"/\";\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default Logout;\n","import React from \"react\";\nimport Form from \"../common/form\";\nimport Joi from \"joi-browser\";\nimport rideService from \"../services/rideService\";\nimport auth from \"../services/authService\";\n\nclass OfferRide extends Form {\n  state = {\n    data: {\n      from: \"\",\n      to: \"\",\n      date: \"\",\n      stops: \"\",\n      time: \"\",\n      seats: \"\",\n      price: \"\",\n      info: \"\",\n    },\n    errors: {},\n  };\n\n  schema = {\n    from: Joi.string().min(3).max(255).required().label(\"From\"),\n    to: Joi.string().min(3).max(255).required().label(\"To\"),\n    stops: Joi.string().min(3).max(255).label(\"Stops\"),\n    date: Joi.date().required().label(\"Date\"),\n    time: Joi.string().required().label(\"Time\"),\n    seats: Joi.number().min(1).max(7).required().label(\"Seat\"),\n    price: Joi.number().required().label(\"Price\"),\n    info: Joi.string().max(255).label(\"Info\"),\n  };\n\n  async doSubmit() {\n    console.log(this.state.data);\n\n    const user = auth.getCurrentUser();\n    const publishData = { ...this.state.data };\n    publishData.userName = user.name;\n    publishData.userID = user._id;\n    this.setState({ publishData });\n    //console.log(publishData);\n\n    try {\n      const response = await rideService.publishRide(publishData);\n      console.log(response);\n      this.props.history.push(\"/dashboard\");\n    } catch (ex) {\n      const errors = { ...this.state.errors };\n      errors.from = ex.response;\n      this.setState({ errors });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Offer Ride</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"from\", \"From\")}\n          {this.renderInput(\"to\", \"To\")}\n          {this.renderInput(\"stops\", \"Additional Stops\")}\n          {this.renderInput(\"date\", \"Date of Ryyding\", \"date\")}\n          {this.renderInput(\"time\", \"Time\", \"time\")}\n          {this.renderInput(\"seats\", \"No. of seats\", \"number\")}\n          {this.renderInput(\"price\", \"Price per seat\", \"number\")}\n          {this.renderInput(\"info\", \"Additional Info\")}\n\n          {this.renderButton(\"Publish\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default OfferRide;\n","import React from \"react\";\nimport Form from \"../common/form\";\nimport rideService from \"../services/rideService\";\nimport Joi from \"joi-browser\";\nimport ShowRides from \"./showRides\";\n\nclass SearchRide extends Form {\n  state = {\n    data: {\n      from: \"\",\n      to: \"\",\n    },\n    searchData: \"\",\n    errors: {},\n  };\n\n  schema = {\n    from: Joi.string().min(3).max(255).required().label(\"From\"),\n    to: Joi.string().min(3).max(255).required().label(\"To\"),\n  };\n\n  async doSubmit() {\n    const searchData = this.state.data;\n\n    try {\n      const response = await rideService.searchRides(searchData);\n      this.setState({ searchData: response.data });\n    } catch (ex) {\n      const errors = { ...this.state.errors };\n      errors.from = ex.response;\n      this.setState({ errors });\n    }\n  }\n\n  render() {\n    const rideList = this.state.searchData;\n    //console.log(rideList);\n\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"from\", \"From\")}\n          {this.renderInput(\"to\", \"To\")}\n          {this.renderButton(\"Search\")}\n        </form>\n        {rideList ? (\n          rideList.map(ride => {\n            return <ShowRides key={ride._id} ride={ride} />;\n          })\n        ) : (\n          <p></p>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default SearchRide;\n","import auth from \"./services/authService\";\nimport React, { Component } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport NavBar from \"./common/navbar\";\nimport NotFound from \"./components/notfound\";\nimport Login from \"./components/login\";\nimport Dashboard from \"./components/dashboard\";\nimport Register from \"./components/register\";\nimport Home from \"./components/home\";\nimport \"./App.css\";\nimport Logout from \"./components/logout\";\nimport OfferRide from \"./components/offerRide\";\nimport ShowRides from \"./components/showRides\";\nimport SearchRide from \"./components/searchRide\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <NavBar user={this.state.user} />\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/searchRide\" component={SearchRide}></Route>\n            <Route path=\"/showRide\" component={ShowRides}></Route>\n            <Route path=\"/offerRide\" component={OfferRide}></Route>\n            <Route path=\"/logout\" component={Logout}></Route>\n            <Route path=\"/home\" component={Home}></Route>\n            <Route path=\"/login\" component={Login}></Route>\n            <Route path=\"/Register\" component={Register}></Route>\n            <Route path=\"/dashboard\" component={Dashboard}></Route>\n            <Route path=\"/not-found\" component={NotFound}></Route>\n            <Redirect from=\"/\" exact to=\"/home\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}