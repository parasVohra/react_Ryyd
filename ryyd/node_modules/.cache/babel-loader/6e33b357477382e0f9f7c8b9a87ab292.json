{"ast":null,"code":"var _jsxFileName = \"/Users/parasvohra/Desktop/React Project/Ryyd/ryyd/src/common/form.jsx\";\nimport React, { Component } from \"react\";\nimport Joi from \"@hapi/joi\";\nimport Input from \"../common/input\";\nimport Select from \"../common/select\";\nimport AutoCompleteCity from \"../common/autoComplete\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport city from \"./cc.json\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass Form extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {},\n      errors: {}\n    };\n\n    this.validate = () => {\n      const options = {\n        abortEarly: false\n      };\n      const Schema = Joi.object().keys(this.schema);\n      const {\n        error\n      } = Schema.validate(this.state.data, options);\n      if (!error) return null;\n      const errors = {};\n\n      for (let item of error.details) errors[item.path[0]] = item.message;\n\n      return errors;\n    };\n\n    this.validateProperty = ({\n      name,\n      value\n    }) => {\n      const obj = {\n        [name]: value\n      };\n      const schema = {\n        [name]: this.schema[name]\n      };\n      const Schema = Joi.object().keys(schema);\n      const {\n        error\n      } = Schema.validate(obj);\n      return error ? error.details[0].message : null;\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const errors = this.validate();\n      this.setState({\n        errors: errors || {}\n      });\n      if (errors) return;\n      this.doSubmit();\n    };\n\n    this.handleChange = ({\n      currentTarget: input\n    }) => {\n      const errors = { ...this.state.errors\n      };\n      const errorMessage = this.validateProperty(input);\n      if (errorMessage) errors[input.name] = errorMessage;else delete errors[input.name];\n      const data = { ...this.state.data\n      };\n      data[input.name] = input.value;\n      this.setState({\n        data,\n        errors\n      });\n    };\n\n    this.renderButton = label => {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        disabled: this.validate(),\n        className: \"btn btn-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }\n      }, label);\n    };\n\n    this.renderInput = (name, label, type = \"text\", readOnly = false) => {\n      const {\n        data,\n        errors\n      } = this.state;\n      return /*#__PURE__*/React.createElement(Input, {\n        type: type,\n        name: name,\n        value: data[name],\n        onChange: this.handleChange,\n        label: label,\n        readOnly: readOnly,\n        error: errors[name],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }\n      });\n    };\n\n    this.renderSelect = (name, label, options) => {\n      const {\n        data,\n        errors\n      } = this.state;\n      return /*#__PURE__*/React.createElement(Select, {\n        name: name,\n        value: data[name],\n        label: label,\n        options: options,\n        onChange: this.handleChange,\n        error: errors[name],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }\n      });\n    };\n\n    this.renderCitySelect = (name, label, error) => {\n      const {\n        data,\n        errors\n      } = this.state;\n      console.log(data);\n      const defaultProps = {\n        options: city,\n        getOptionLabel: options => options.City\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Autocomplete, Object.assign({}, defaultProps, {\n        id: \"clear-on-scape\",\n        clearOnEscape: true,\n        autoSelect: true,\n        renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n          inputProps: { ...params.inputProps,\n            autoComplete: \"new-password\"\n          },\n          name: name,\n          onChange: this.handleChange,\n          label: label,\n          error: errors[name],\n          margin: \"normal\",\n          value: data[name],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }\n      })), error && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 19\n        }\n      }, error));\n    };\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/parasvohra/Desktop/React Project/Ryyd/ryyd/src/common/form.jsx"],"names":["React","Component","Joi","Input","Select","AutoCompleteCity","Autocomplete","city","TextField","Form","state","data","errors","validate","options","abortEarly","Schema","object","keys","schema","error","item","details","path","message","validateProperty","name","value","obj","handleSubmit","e","preventDefault","setState","doSubmit","handleChange","currentTarget","input","errorMessage","renderButton","label","renderInput","type","readOnly","renderSelect","renderCitySelect","console","log","defaultProps","getOptionLabel","City","params","inputProps","autoComplete"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,gBAAP,MAA6B,wBAA7B;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AAEA,MAAMC,IAAN,SAAmBR,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BS,KAD2B,GACnB;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,MAAM,EAAE;AAFF,KADmB;;AAAA,SAM3BC,QAN2B,GAMhB,MAAM;AACf,YAAMC,OAAO,GAAG;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAhB;AACA,YAAMC,MAAM,GAAGd,GAAG,CAACe,MAAJ,GAAaC,IAAb,CAAkB,KAAKC,MAAvB,CAAf;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAYJ,MAAM,CAACH,QAAP,CAAgB,KAAKH,KAAL,CAAWC,IAA3B,EAAiCG,OAAjC,CAAlB;AAEA,UAAI,CAACM,KAAL,EAAY,OAAO,IAAP;AACZ,YAAMR,MAAM,GAAG,EAAf;;AACA,WAAK,IAAIS,IAAT,IAAiBD,KAAK,CAACE,OAAvB,EAAgCV,MAAM,CAACS,IAAI,CAACE,IAAL,CAAU,CAAV,CAAD,CAAN,GAAuBF,IAAI,CAACG,OAA5B;;AAChC,aAAOZ,MAAP;AACD,KAf0B;;AAAA,SAiB3Ba,gBAjB2B,GAiBR,CAAC;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAD,KAAqB;AACtC,YAAMC,GAAG,GAAG;AAAE,SAACF,IAAD,GAAQC;AAAV,OAAZ;AACA,YAAMR,MAAM,GAAG;AAAE,SAACO,IAAD,GAAQ,KAAKP,MAAL,CAAYO,IAAZ;AAAV,OAAf;AACA,YAAMV,MAAM,GAAGd,GAAG,CAACe,MAAJ,GAAaC,IAAb,CAAkBC,MAAlB,CAAf;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAYJ,MAAM,CAACH,QAAP,CAAgBe,GAAhB,CAAlB;AAEA,aAAOR,KAAK,GAAGA,KAAK,CAACE,OAAN,CAAc,CAAd,EAAiBE,OAApB,GAA8B,IAA1C;AACD,KAxB0B;;AAAA,SA0B3BK,YA1B2B,GA0BZC,CAAC,IAAI;AAClBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMnB,MAAM,GAAG,KAAKC,QAAL,EAAf;AACA,WAAKmB,QAAL,CAAc;AAAEpB,QAAAA,MAAM,EAAEA,MAAM,IAAI;AAApB,OAAd;AACA,UAAIA,MAAJ,EAAY;AAEZ,WAAKqB,QAAL;AACD,KAjC0B;;AAAA,SAmC3BC,YAnC2B,GAmCZ,CAAC;AAAEC,MAAAA,aAAa,EAAEC;AAAjB,KAAD,KAA8B;AAC3C,YAAMxB,MAAM,GAAG,EAAE,GAAG,KAAKF,KAAL,CAAWE;AAAhB,OAAf;AACA,YAAMyB,YAAY,GAAG,KAAKZ,gBAAL,CAAsBW,KAAtB,CAArB;AACA,UAAIC,YAAJ,EAAkBzB,MAAM,CAACwB,KAAK,CAACV,IAAP,CAAN,GAAqBW,YAArB,CAAlB,KACK,OAAOzB,MAAM,CAACwB,KAAK,CAACV,IAAP,CAAb;AAEL,YAAMf,IAAI,GAAG,EAAE,GAAG,KAAKD,KAAL,CAAWC;AAAhB,OAAb;AACAA,MAAAA,IAAI,CAACyB,KAAK,CAACV,IAAP,CAAJ,GAAmBU,KAAK,CAACT,KAAzB;AACA,WAAKK,QAAL,CAAc;AAAErB,QAAAA,IAAF;AAAQC,QAAAA;AAAR,OAAd;AACD,KA5C0B;;AAAA,SA8C3B0B,YA9C2B,GA8CZC,KAAK,IAAI;AACtB,0BACE;AAAQ,QAAA,QAAQ,EAAE,KAAK1B,QAAL,EAAlB;AAAmC,QAAA,SAAS,EAAC,iBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG0B,KADH,CADF;AAKD,KApD0B;;AAAA,SAsD3BC,WAtD2B,GAsDb,CAACd,IAAD,EAAOa,KAAP,EAAcE,IAAI,GAAG,MAArB,EAA6BC,QAAQ,GAAG,KAAxC,KAAkD;AAC9D,YAAM;AAAE/B,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAmB,KAAKF,KAA9B;AACA,0BACE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAE+B,IADR;AAEE,QAAA,IAAI,EAAEf,IAFR;AAGE,QAAA,KAAK,EAAEf,IAAI,CAACe,IAAD,CAHb;AAIE,QAAA,QAAQ,EAAE,KAAKQ,YAJjB;AAKE,QAAA,KAAK,EAAEK,KALT;AAME,QAAA,QAAQ,EAAEG,QANZ;AAOE,QAAA,KAAK,EAAE9B,MAAM,CAACc,IAAD,CAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAWD,KAnE0B;;AAAA,SAqE3BiB,YArE2B,GAqEZ,CAACjB,IAAD,EAAOa,KAAP,EAAczB,OAAd,KAA0B;AACvC,YAAM;AAAEH,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAmB,KAAKF,KAA9B;AACA,0BACE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAEgB,IADR;AAEE,QAAA,KAAK,EAAEf,IAAI,CAACe,IAAD,CAFb;AAGE,QAAA,KAAK,EAAEa,KAHT;AAIE,QAAA,OAAO,EAAEzB,OAJX;AAKE,QAAA,QAAQ,EAAE,KAAKoB,YALjB;AAME,QAAA,KAAK,EAAEtB,MAAM,CAACc,IAAD,CANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAUD,KAjF0B;;AAAA,SAmF3BkB,gBAnF2B,GAmFR,CAAClB,IAAD,EAAOa,KAAP,EAAcnB,KAAd,KAAwB;AACzC,YAAM;AAAET,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAmB,KAAKF,KAA9B;AACAmC,MAAAA,OAAO,CAACC,GAAR,CAAYnC,IAAZ;AACA,YAAMoC,YAAY,GAAG;AACnBjC,QAAAA,OAAO,EAAEP,IADU;AAEnByC,QAAAA,cAAc,EAAElC,OAAO,IAAIA,OAAO,CAACmC;AAFhB,OAArB;AAIA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,YAAD,oBACMF,YADN;AAEE,QAAA,EAAE,EAAC,gBAFL;AAGE,QAAA,aAAa,MAHf;AAIE,QAAA,UAAU,MAJZ;AAKE,QAAA,WAAW,EAAEG,MAAM,iBACjB,oBAAC,SAAD,oBACMA,MADN;AAEE,UAAA,UAAU,EAAE,EACV,GAAGA,MAAM,CAACC,UADA;AAEVC,YAAAA,YAAY,EAAE;AAFJ,WAFd;AAME,UAAA,IAAI,EAAE1B,IANR;AAOE,UAAA,QAAQ,EAAE,KAAKQ,YAPjB;AAQE,UAAA,KAAK,EAAEK,KART;AASE,UAAA,KAAK,EAAE3B,MAAM,CAACc,IAAD,CATf;AAUE,UAAA,MAAM,EAAC,QAVT;AAWE,UAAA,KAAK,EAAEf,IAAI,CAACe,IAAD,CAXb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAsBGN,KAAK,iBAAI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqCA,KAArC,CAtBZ,CADF;AA0BD,KApH0B;AAAA;;AAAA;;AAuH7B,eAAeX,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Joi from \"@hapi/joi\";\nimport Input from \"../common/input\";\nimport Select from \"../common/select\";\nimport AutoCompleteCity from \"../common/autoComplete\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport city from \"./cc.json\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass Form extends Component {\n  state = {\n    data: {},\n    errors: {},\n  };\n\n  validate = () => {\n    const options = { abortEarly: false };\n    const Schema = Joi.object().keys(this.schema);\n    const { error } = Schema.validate(this.state.data, options);\n\n    if (!error) return null;\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n  };\n\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const Schema = Joi.object().keys(schema);\n    const { error } = Schema.validate(obj);\n\n    return error ? error.details[0].message : null;\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n\n    this.doSubmit();\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data, errors });\n  };\n\n  renderButton = label => {\n    return (\n      <button disabled={this.validate()} className=\"btn btn-primary\">\n        {label}\n      </button>\n    );\n  };\n\n  renderInput = (name, label, type = \"text\", readOnly = false) => {\n    const { data, errors } = this.state;\n    return (\n      <Input\n        type={type}\n        name={name}\n        value={data[name]}\n        onChange={this.handleChange}\n        label={label}\n        readOnly={readOnly}\n        error={errors[name]}\n      />\n    );\n  };\n\n  renderSelect = (name, label, options) => {\n    const { data, errors } = this.state;\n    return (\n      <Select\n        name={name}\n        value={data[name]}\n        label={label}\n        options={options}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  };\n\n  renderCitySelect = (name, label, error) => {\n    const { data, errors } = this.state;\n    console.log(data);\n    const defaultProps = {\n      options: city,\n      getOptionLabel: options => options.City,\n    };\n    return (\n      <div>\n        <Autocomplete\n          {...defaultProps}\n          id=\"clear-on-scape\"\n          clearOnEscape\n          autoSelect\n          renderInput={params => (\n            <TextField\n              {...params}\n              inputProps={{\n                ...params.inputProps,\n                autoComplete: \"new-password\",\n              }}\n              name={name}\n              onChange={this.handleChange}\n              label={label}\n              error={errors[name]}\n              margin=\"normal\"\n              value={data[name]}\n            />\n          )}\n        />\n        {error && <div className=\"alert alert-danger\">{error}</div>}\n      </div>\n    );\n  };\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}