{"ast":null,"code":"var _jsxFileName = \"/Users/parasvohra/Desktop/React Project/Ryyd/ryyd/src/components/requestRide.jsx\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Form from \"../common/form\";\nimport rideService from \"../services/rideService\";\nimport Joi from \"@hapi/joi\";\nimport auth from \"../services/authService\";\n\nclass RequestRide extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        from: \"\",\n        goingTo: \"\",\n        date: \"\",\n        time: \"\"\n      },\n      errors: {}\n    };\n    this.schema = {\n      from: Joi.string().min(3).max(255).required().label(\"From\"),\n      goingTo: Joi.string().min(3).max(255).required().label(\"To\"),\n      date: Joi.date().greater(\"now\").required().label(\"Date\"),\n      time: Joi.string().required().label(\"Time\")\n    };\n  }\n\n  async doSubmit() {\n    const user = auth.getCurrentUser();\n    const rideReqData = { ...this.state.data\n    };\n    rideReqData.userName = user.name;\n    rideReqData.userID = user._id;\n    this.setState({\n      rideReqData\n    });\n\n    try {\n      const response = await rideService.requestRide(rideReqData);\n      console.log(response);\n\n      if (response.status === 200) {\n        window.confirm(\"Request is Posted successfully\");\n        const history = useHistory();\n        history.push(\"/dashboard\");\n      }\n    } catch (ex) {\n      const errors = { ...this.state.errors\n      };\n      errors.from = ex.response;\n      this.setState({\n        errors\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, this.renderInput(\"from\", \"From\"), this.renderInput(\"goingTo\", \"To\"), this.renderInput(\"date\", \"Date of Journey\", \"date\"), this.renderInput(\"time\", \"Time\", \"time\"), this.renderButton(\"Drop Ride Request\")));\n  }\n\n}\n\nexport default RequestRide;","map":{"version":3,"sources":["/Users/parasvohra/Desktop/React Project/Ryyd/ryyd/src/components/requestRide.jsx"],"names":["React","useHistory","Form","rideService","Joi","auth","RequestRide","state","data","from","goingTo","date","time","errors","schema","string","min","max","required","label","greater","doSubmit","user","getCurrentUser","rideReqData","userName","name","userID","_id","setState","response","requestRide","console","log","status","window","confirm","history","push","ex","render","handleSubmit","renderInput","renderButton"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Form from \"../common/form\";\nimport rideService from \"../services/rideService\";\nimport Joi from \"@hapi/joi\";\nimport auth from \"../services/authService\";\n\nclass RequestRide extends Form {\n  state = {\n    data: {\n      from: \"\",\n      goingTo: \"\",\n      date: \"\",\n      time: \"\",\n    },\n    errors: {},\n  };\n\n  schema = {\n    from: Joi.string().min(3).max(255).required().label(\"From\"),\n    goingTo: Joi.string().min(3).max(255).required().label(\"To\"),\n    date: Joi.date().greater(\"now\").required().label(\"Date\"),\n    time: Joi.string().required().label(\"Time\"),\n  };\n\n  async doSubmit() {\n    const user = auth.getCurrentUser();\n    const rideReqData = { ...this.state.data };\n    rideReqData.userName = user.name;\n    rideReqData.userID = user._id;\n    this.setState({ rideReqData });\n    try {\n      const response = await rideService.requestRide(rideReqData);\n      console.log(response);\n      if (response.status === 200) {\n        window.confirm(\"Request is Posted successfully\");\n\n        const history = useHistory();\n        history.push(\"/dashboard\");\n      }\n    } catch (ex) {\n      const errors = { ...this.state.errors };\n      errors.from = ex.response;\n      this.setState({ errors });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"from\", \"From\")}\n          {this.renderInput(\"goingTo\", \"To\")}\n          {this.renderInput(\"date\", \"Date of Journey\", \"date\")}\n          {this.renderInput(\"time\", \"Time\", \"time\")}\n          {this.renderButton(\"Drop Ride Request\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RequestRide;\n"]},"metadata":{},"sourceType":"module"}