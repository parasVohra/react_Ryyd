{"ast":null,"code":"import { createAction, createReducer } from \"@reduxjs/toolkit\";\nimport { getCurrentUser } from \"../services/authService\";\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: false,\n  isLoading: true,\n  user: getCurrentUser()\n};\nconst loginSuccess = createAction(\"loginSuccess\");\nconst logoutSuccess = createAction(\"logoutSuccess\");\nconst authReducer = createReducer(initialState, {\n  [loginSuccess]: (state, action) => {\n    state.isAuthenticated = true;\n    state.isLoading = false;\n    return state;\n  },\n  [logoutSuccess]: (state, action) => {\n    state.token = null;\n    state.isAuthenticated = false;\n    state.user = null;\n    return state;\n  }\n});\nexport default authReducer;","map":{"version":3,"sources":["/Users/parasvohra/Desktop/React Project/Ryyd/ryyd/src/store/auth.js"],"names":["createAction","createReducer","getCurrentUser","initialState","token","localStorage","getItem","isAuthenticated","isLoading","user","loginSuccess","logoutSuccess","authReducer","state","action"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,kBAA5C;AACA,SAASC,cAAT,QAA+B,yBAA/B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnBC,EAAAA,eAAe,EAAE,KAFE;AAGnBC,EAAAA,SAAS,EAAE,IAHQ;AAInBC,EAAAA,IAAI,EAAEP,cAAc;AAJD,CAArB;AAOA,MAAMQ,YAAY,GAAGV,YAAY,CAAC,cAAD,CAAjC;AACA,MAAMW,aAAa,GAAGX,YAAY,CAAC,eAAD,CAAlC;AAEA,MAAMY,WAAW,GAAGX,aAAa,CAACE,YAAD,EAAe;AAC9C,GAACO,YAAD,GAAgB,CAACG,KAAD,EAAQC,MAAR,KAAmB;AACjCD,IAAAA,KAAK,CAACN,eAAN,GAAwB,IAAxB;AACAM,IAAAA,KAAK,CAACL,SAAN,GAAkB,KAAlB;AACA,WAAOK,KAAP;AACD,GAL6C;AAM9C,GAACF,aAAD,GAAiB,CAACE,KAAD,EAAQC,MAAR,KAAmB;AAClCD,IAAAA,KAAK,CAACT,KAAN,GAAc,IAAd;AACAS,IAAAA,KAAK,CAACN,eAAN,GAAwB,KAAxB;AACAM,IAAAA,KAAK,CAACJ,IAAN,GAAa,IAAb;AACA,WAAOI,KAAP;AACD;AAX6C,CAAf,CAAjC;AAcA,eAAeD,WAAf","sourcesContent":["import { createAction, createReducer } from \"@reduxjs/toolkit\";\nimport { getCurrentUser } from \"../services/authService\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: false,\n  isLoading: true,\n  user: getCurrentUser(),\n};\n\nconst loginSuccess = createAction(\"loginSuccess\");\nconst logoutSuccess = createAction(\"logoutSuccess\");\n\nconst authReducer = createReducer(initialState, {\n  [loginSuccess]: (state, action) => {\n    state.isAuthenticated = true;\n    state.isLoading = false;\n    return state;\n  },\n  [logoutSuccess]: (state, action) => {\n    state.token = null;\n    state.isAuthenticated = false;\n    state.user = null;\n    return state;\n  },\n});\n\nexport default authReducer;\n"]},"metadata":{},"sourceType":"module"}