{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { getCurrentUser } from \"../services/authService\";\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    token: localStorage.getItem(\"token\"),\n    isAuthenticated: false,\n    isLoading: true,\n    user: getCurrentUser()\n  },\n  reducers: {\n    loginSuccess: (auth, action) => {\n      auth.isAuthenticated = true;\n    },\n    logoutSuccess: (auth, action) => {\n      auth.token = null;\n      auth.isAuthenticated = false;\n      auth.user = null;\n    }\n  }\n});\nexport const {\n  loginSuccess\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"sources":["/Users/parasvohra/Desktop/React Project/Ryyd/ryyd/src/store/auth.js"],"names":["createSlice","getCurrentUser","authSlice","name","initialState","token","localStorage","getItem","isAuthenticated","isLoading","user","reducers","loginSuccess","auth","action","logoutSuccess","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,MAAMC,SAAS,GAAGF,WAAW,CAAC;AAC5BG,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADK;AAEZC,IAAAA,eAAe,EAAE,KAFL;AAGZC,IAAAA,SAAS,EAAE,IAHC;AAIZC,IAAAA,IAAI,EAAET,cAAc;AAJR,GAFc;AAQ5BU,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YAAY,EAAE,CAACC,IAAD,EAAOC,MAAP,KAAkB;AAC9BD,MAAAA,IAAI,CAACL,eAAL,GAAuB,IAAvB;AACD,KAHO;AAKRO,IAAAA,aAAa,EAAE,CAACF,IAAD,EAAOC,MAAP,KAAkB;AAC/BD,MAAAA,IAAI,CAACR,KAAL,GAAa,IAAb;AACAQ,MAAAA,IAAI,CAACL,eAAL,GAAuB,KAAvB;AACAK,MAAAA,IAAI,CAACH,IAAL,GAAY,IAAZ;AACD;AATO;AARkB,CAAD,CAA7B;AAqBA,OAAO,MAAM;AAAEE,EAAAA;AAAF,IAAmBV,SAAS,CAACc,OAAnC;AAEP,eAAed,SAAS,CAACe,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { getCurrentUser } from \"../services/authService\";\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    token: localStorage.getItem(\"token\"),\n    isAuthenticated: false,\n    isLoading: true,\n    user: getCurrentUser(),\n  },\n  reducers: {\n    loginSuccess: (auth, action) => {\n      auth.isAuthenticated = true;\n    },\n\n    logoutSuccess: (auth, action) => {\n      auth.token = null;\n      auth.isAuthenticated = false;\n      auth.user = null;\n    },\n  },\n});\n\nexport const { loginSuccess } = authSlice.actions;\n\nexport default authSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}