{"ast":null,"code":"var _jsxFileName = \"/Users/parasvohra/Desktop/React Project/Ryyd/ryyd/src/components/searchRide.jsx\";\nimport React from \"react\";\nimport Form from \"../common/form\";\nimport rideService from \"../services/rideService\";\nimport Joi from \"@hapi/joi\";\nimport ShowRides from \"./showRides\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport { searchedRide } from \"../store/rides\";\n\nclass SearchRide extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        from: \"London\",\n        to: \"Toronto\",\n        date: \"\"\n      },\n      searchData: \"\",\n      errors: {}\n    };\n    this.date = moment().format(\"L\");\n    this.schema = {\n      from: Joi.string().min(3).max(255).required().label(\"From\"),\n      to: Joi.string().min(3).max(255).required().label(\"To\"),\n      date: Joi.date().required().label(\"Date\")\n    };\n  }\n\n  componentDidMount() {\n    console.log(moment().format(\"ll\"));\n  }\n\n  selectedRide(index) {\n    console.log(\"clicked selected\");\n    this.props.selectedRides(index);\n  }\n\n  saveSelectedRide(id) {\n    this.props.selectedRides(id);\n  }\n\n  async doSubmit() {\n    const searchData = this.state.data;\n\n    try {\n      const response = await rideService.searchRides(searchData);\n      this.props.requestedRide();\n      this.props.searchedRide(response.data);\n      this.setState({\n        searchData: response.data\n      });\n    } catch (ex) {\n      const errors = { ...this.state.errors\n      };\n      errors.from = ex.response;\n      this.setState({\n        errors\n      });\n    }\n  }\n\n  render() {\n    const rideList = this.props.ride.searchedRide;\n    let message;\n\n    if (rideList) {\n      if (rideList.length === 0) {\n        message = /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }\n        }, \"There is no ride available at this point\"), /*#__PURE__*/React.createElement(Link, {\n          to: \"/requestRide\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          to: \"/offerRide\",\n          className: \"btn btn-primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }\n        }, \"Drop Request\")));\n      } else {\n        message = /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }\n        }, rideList.map((ride, index) => /*#__PURE__*/React.createElement(Link, {\n          to: {\n            pathname: \"/showRideInfo\",\n            state: {\n              index: index\n            }\n          },\n          style: {\n            textDecoration: \"none\",\n            color: \"black\"\n          },\n          key: ride._id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(ShowRides, {\n          onclick: this.saveSelectedRide(ride._id),\n          params: index,\n          key: ride._id,\n          ride: ride,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }\n        }))));\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, this.renderInput(\"from\", \"From\"), this.renderInput(\"to\", \"To\"), this.renderInput(\"date\", \"Date\", \"date\", \"\"), this.renderButton(\"Search\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, message));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  ride: state.ride\n});\n\nconst mapDispatchToProps = dispatch => ({\n  searchedRide: ride => dispatch({\n    type: \"searchedRide\",\n    payload: {\n      message: ride\n    }\n  }),\n  requestedRide: () => dispatch({\n    type: \"requestedRide\"\n  }),\n  selectedRides: index => dispatch({\n    type: \"selectedRide\",\n    payload: index\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchRide);","map":{"version":3,"sources":["/Users/parasvohra/Desktop/React Project/Ryyd/ryyd/src/components/searchRide.jsx"],"names":["React","Form","rideService","Joi","ShowRides","Link","moment","connect","searchedRide","SearchRide","state","data","from","to","date","searchData","errors","format","schema","string","min","max","required","label","componentDidMount","console","log","selectedRide","index","props","selectedRides","saveSelectedRide","id","doSubmit","response","searchRides","requestedRide","setState","ex","render","rideList","ride","message","length","map","pathname","textDecoration","color","_id","handleSubmit","renderInput","renderButton","mapStateToProps","mapDispatchToProps","dispatch","type","payload"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Form from \"../common/form\";\nimport rideService from \"../services/rideService\";\nimport Joi from \"@hapi/joi\";\nimport ShowRides from \"./showRides\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport { searchedRide } from \"../store/rides\";\n\nclass SearchRide extends Form {\n  state = {\n    data: {\n      from: \"London\",\n      to: \"Toronto\",\n      date: \"\",\n    },\n    searchData: \"\",\n    errors: {},\n  };\n\n  date = moment().format(\"L\");\n\n  componentDidMount() {\n    console.log(moment().format(\"ll\"));\n  }\n\n  selectedRide(index) {\n    console.log(\"clicked selected\");\n    this.props.selectedRides(index);\n  }\n  saveSelectedRide(id) {\n    this.props.selectedRides(id);\n  }\n\n  schema = {\n    from: Joi.string().min(3).max(255).required().label(\"From\"),\n    to: Joi.string().min(3).max(255).required().label(\"To\"),\n    date: Joi.date().required().label(\"Date\"),\n  };\n\n  async doSubmit() {\n    const searchData = this.state.data;\n    try {\n      const response = await rideService.searchRides(searchData);\n      this.props.requestedRide();\n      this.props.searchedRide(response.data);\n      this.setState({ searchData: response.data });\n    } catch (ex) {\n      const errors = { ...this.state.errors };\n      errors.from = ex.response;\n      this.setState({ errors });\n    }\n  }\n\n  render() {\n    const rideList = this.props.ride.searchedRide;\n    let message;\n    if (rideList) {\n      if (rideList.length === 0) {\n        message = (\n          <div>\n            <p>There is no ride available at this point</p>\n            <Link to=\"/requestRide\">\n              <button to=\"/offerRide\" className=\"btn btn-primary\">\n                Drop Request\n              </button>\n            </Link>\n          </div>\n        );\n      } else {\n        message = (\n          <div>\n            {rideList.map((ride, index) => (\n              <Link\n                to={{\n                  pathname: \"/showRideInfo\",\n                  state: { index: index },\n                }}\n                style={{\n                  textDecoration: \"none\",\n                  color: \"black\",\n                }}\n                key={ride._id}\n              >\n                <ShowRides\n                  onclick={this.saveSelectedRide(ride._id)}\n                  params={index}\n                  key={ride._id}\n                  ride={ride}\n                />\n              </Link>\n            ))}\n          </div>\n        );\n      }\n    }\n\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"from\", \"From\")}\n          {this.renderInput(\"to\", \"To\")}\n          {this.renderInput(\"date\", \"Date\", \"date\", \"\")}\n          {this.renderButton(\"Search\")}\n        </form>\n        <div>{message}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  ride: state.ride,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  searchedRide: ride =>\n    dispatch({\n      type: \"searchedRide\",\n      payload: { message: ride },\n    }),\n  requestedRide: () => dispatch({ type: \"requestedRide\" }),\n  selectedRides: index =>\n    dispatch({\n      type: \"selectedRide\",\n      payload: index,\n    }),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchRide);\n"]},"metadata":{},"sourceType":"module"}