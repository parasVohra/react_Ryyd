{"ast":null,"code":"import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\nimport jwtDecode from \"jwt-decode\";\nconst apiEndpoint = apiUrl + \"/auth\";\nconst tokenKey = \"token\";\nhttp.setJwt(getJwt());\nexport async function login(email, password) {\n  const {\n    data: jwt\n  } = await http.post(apiEndpoint, {\n    email,\n    password\n  });\n  localStorage.setItem(tokenKey, jwt);\n}\nexport function loginWithJwt(jwt) {\n  localStorage.setItem(tokenKey, jwt);\n}\nexport function getJwt() {\n  return localStorage.getItem(tokenKey);\n}\nexport function logout() {\n  localStorage.removeItem(tokenKey);\n}\nexport function getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(tokenKey);\n    return jwtDecode(jwt);\n  } catch (ex) {\n    return null;\n  }\n}\nexport async function forgotPassword(email) {\n  const data = await http.post(apiUrl + \"/forgotPassword\", {\n    email\n  });\n  return data;\n}\nexport async function resetPassword(newPassword) {\n  const data = await http.post(apiUrl + \"/resetPassword\", newPassword);\n  return data;\n}\nexport default {\n  login,\n  logout,\n  getCurrentUser,\n  loginWithJwt,\n  getJwt,\n  forgotPassword,\n  resetPassword\n};","map":{"version":3,"sources":["/Users/parasvohra/Desktop/React Project/Ryyd/ryyd/src/services/authService.js"],"names":["http","apiUrl","jwtDecode","apiEndpoint","tokenKey","setJwt","getJwt","login","email","password","data","jwt","post","localStorage","setItem","loginWithJwt","getItem","logout","removeItem","getCurrentUser","ex","forgotPassword","resetPassword","newPassword"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,eAAjB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,WAAW,GAAGF,MAAM,GAAG,OAA7B;AACA,MAAMG,QAAQ,GAAG,OAAjB;AAEAJ,IAAI,CAACK,MAAL,CAAYC,MAAM,EAAlB;AAEA,OAAO,eAAeC,KAAf,CAAqBC,KAArB,EAA4BC,QAA5B,EAAsC;AAC3C,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAgB,MAAMX,IAAI,CAACY,IAAL,CAAUT,WAAV,EAAuB;AAAEK,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAvB,CAA5B;AACAI,EAAAA,YAAY,CAACC,OAAb,CAAqBV,QAArB,EAA+BO,GAA/B;AACD;AAED,OAAO,SAASI,YAAT,CAAsBJ,GAAtB,EAA2B;AAChCE,EAAAA,YAAY,CAACC,OAAb,CAAqBV,QAArB,EAA+BO,GAA/B;AACD;AAED,OAAO,SAASL,MAAT,GAAkB;AACvB,SAAOO,YAAY,CAACG,OAAb,CAAqBZ,QAArB,CAAP;AACD;AAED,OAAO,SAASa,MAAT,GAAkB;AACvBJ,EAAAA,YAAY,CAACK,UAAb,CAAwBd,QAAxB;AACD;AAED,OAAO,SAASe,cAAT,GAA0B;AAC/B,MAAI;AACF,UAAMR,GAAG,GAAGE,YAAY,CAACG,OAAb,CAAqBZ,QAArB,CAAZ;AACA,WAAOF,SAAS,CAACS,GAAD,CAAhB;AACD,GAHD,CAGE,OAAOS,EAAP,EAAW;AACX,WAAO,IAAP;AACD;AACF;AAED,OAAO,eAAeC,cAAf,CAA8Bb,KAA9B,EAAqC;AAC1C,QAAME,IAAI,GAAG,MAAMV,IAAI,CAACY,IAAL,CAAUX,MAAM,GAAG,iBAAnB,EAAsC;AAAEO,IAAAA;AAAF,GAAtC,CAAnB;AACA,SAAOE,IAAP;AACD;AACD,OAAO,eAAeY,aAAf,CAA6BC,WAA7B,EAA0C;AAC/C,QAAMb,IAAI,GAAG,MAAMV,IAAI,CAACY,IAAL,CAAUX,MAAM,GAAG,gBAAnB,EAAqCsB,WAArC,CAAnB;AACA,SAAOb,IAAP;AACD;AAED,eAAe;AACbH,EAAAA,KADa;AAEbU,EAAAA,MAFa;AAGbE,EAAAA,cAHa;AAIbJ,EAAAA,YAJa;AAKbT,EAAAA,MALa;AAMbe,EAAAA,cANa;AAObC,EAAAA;AAPa,CAAf","sourcesContent":["import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\nimport jwtDecode from \"jwt-decode\";\n\nconst apiEndpoint = apiUrl + \"/auth\";\nconst tokenKey = \"token\";\n\nhttp.setJwt(getJwt());\n\nexport async function login(email, password) {\n  const { data: jwt } = await http.post(apiEndpoint, { email, password });\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport function loginWithJwt(jwt) {\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport function getJwt() {\n  return localStorage.getItem(tokenKey);\n}\n\nexport function logout() {\n  localStorage.removeItem(tokenKey);\n}\n\nexport function getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(tokenKey);\n    return jwtDecode(jwt);\n  } catch (ex) {\n    return null;\n  }\n}\n\nexport async function forgotPassword(email) {\n  const data = await http.post(apiUrl + \"/forgotPassword\", { email });\n  return data;\n}\nexport async function resetPassword(newPassword) {\n  const data = await http.post(apiUrl + \"/resetPassword\", newPassword);\n  return data;\n}\n\nexport default {\n  login,\n  logout,\n  getCurrentUser,\n  loginWithJwt,\n  getJwt,\n  forgotPassword,\n  resetPassword,\n};\n"]},"metadata":{},"sourceType":"module"}