{"ast":null,"code":"var _jsxFileName = \"/Users/parasvohra/Desktop/React Project/Ryyd/ryyd/src/components/auth/register.jsx\";\nimport auth from \"../../services/authService\";\nimport React from \"react\";\nimport Form from \"../../common/form\";\nimport Joi from \"@hapi/joi\";\nimport userService from \"../../services/userService\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Register extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        email: \"\",\n        password: \"\",\n        name: \"\",\n        phoneNumber: \"\"\n      },\n      errors: {}\n    };\n    this.schema = {\n      email: Joi.string().email({\n        tlds: {\n          allow: false\n        }\n      }).min(5).max(255).required().label(\"Email\"),\n      password: Joi.string().min(5).max(255).required().label(\"Password\"),\n      name: Joi.string().min(3).max(40).required().label(\"Name\"),\n      phoneNumber: Joi.number().integer().min(1000000000).max(9999999999).label(\"Phone Number\").error(new Error(\"Was REALLY expecting a string\"))\n    };\n  }\n\n  async doSubmit() {\n    console.log(\"submitted\");\n\n    try {\n      const response = await userService.register(this.state.data);\n      console.log(response);\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\n      window.location = \"/dashboard\";\n    } catch (ex) {\n      const errors = { ...this.state.errors\n      };\n      errors.email = ex.response.data;\n      this.setState({\n        errors\n      });\n    }\n  }\n\n  render() {\n    if (auth.getCurrentUser()) return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 39\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, this.renderInput(\"name\", \"Name\"), this.renderInput(\"email\", \"Email\", \"email\"), this.renderInput(\"password\", \"Password\", \"password\"), this.renderInput(\"phoneNumber\", \"Phone Number\", \"number\"), this.renderButton(\"Register\")));\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/Users/parasvohra/Desktop/React Project/Ryyd/ryyd/src/components/auth/register.jsx"],"names":["auth","React","Form","Joi","userService","Redirect","Register","state","data","email","password","name","phoneNumber","errors","schema","string","tlds","allow","min","max","required","label","number","integer","error","Error","doSubmit","console","log","response","register","loginWithJwt","headers","window","location","ex","setState","render","getCurrentUser","handleSubmit","renderInput","renderButton"],"mappings":"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","sourcesContent":["import auth from \"../../services/authService\";\nimport React from \"react\";\nimport Form from \"../../common/form\";\nimport Joi from \"@hapi/joi\";\nimport userService from \"../../services/userService\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Register extends Form {\n  state = {\n    data: { email: \"\", password: \"\", name: \"\", phoneNumber: \"\" },\n    errors: {},\n  };\n\n  schema = {\n    email: Joi.string()\n      .email({ tlds: { allow: false } })\n      .min(5)\n      .max(255)\n      .required()\n      .label(\"Email\"),\n    password: Joi.string().min(5).max(255).required().label(\"Password\"),\n    name: Joi.string().min(3).max(40).required().label(\"Name\"),\n    phoneNumber: Joi.number()\n      .integer()\n      .min(1000000000)\n      .max(9999999999)\n      .label(\"Phone Number\")\n      .error(new Error(\"Was REALLY expecting a string\")),\n  };\n\n  async doSubmit() {\n    console.log(\"submitted\");\n\n    try {\n      const response = await userService.register(this.state.data);\n      console.log(response);\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\n      window.location = \"/dashboard\";\n    } catch (ex) {\n      const errors = { ...this.state.errors };\n      errors.email = ex.response.data;\n      this.setState({ errors });\n    }\n  }\n\n  render() {\n    if (auth.getCurrentUser()) return <Redirect to=\"/dashboard\" />;\n    return (\n      <div>\n        <h1>Register</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"name\", \"Name\")}\n          {this.renderInput(\"email\", \"Email\", \"email\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderInput(\"phoneNumber\", \"Phone Number\", \"number\")}\n          {this.renderButton(\"Register\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}